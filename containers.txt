# list an image and it's intermediate layer ids
( i="test" ids=; while [ -n "$i" ]; do ids="$ids $i" i="$(podman image inspect -f '{{ .Parent }}' "$i")"; done; echo "$ids"; )

# list an image's root ancestor id
( i="test" t="$i"; while [ -n "$i" ]; do t="$i" i="$(podman image inspect -f '{{ .Parent }}' "$i")"; done; echo "$t"; )

# convert list of image references to list of tags (all matching) or short ids if no tag (xargs optional)
podman image inspect --format '{{ range .RepoTags }}{{ . }}\n{{ else }}{{ .ID }}{{ end }}' $TAGS | xargs

# list potential build cache layers: dangling or intermediate images with root ancestors that are still labeled (I.E. not untagged/replaced)
for img in $(podman image list -q --filter dangling=true) $(podman image list -q --filter intermediate=true); do
	root=$( i="$img" t="$i"; while [ -n "$i" ]; do t="$i" i="$(podman image inspect -f '{{ .Parent }}' "$i")"; done; echo "$t"; )
	[ "$(podman image inspect -f '{{ len .RepoTags }}' "$root")" -gt 0 ] && echo "$img"
done

# list images in tree format
podman image list --all --format '{{.Repository}},{{.Tag}},{{.ID}},{{printf "%.12s" .ParentId}},{{.Created}},{{.Size}}' \
	| column -s , --tree-id 3 --tree-parent 4 --tree 3 -N 'REPOSITORY,TAG,IMAGE ID,PARENT,CREATED,SIZE' -H PARENT
